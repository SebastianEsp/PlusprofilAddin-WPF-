<!--  TODO: Refactor ListBox.LostFocus (Breaks MVVM-pattern)  -->
<Window
	x:Class="PlusprofilAddin.Views.ElementDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:cns="clr-namespace:PlusprofilAddin.Commands"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Name="MainWindow"
	Title="{Binding Path=UMLNameValue}"
	d:DesignHeight="500"
	d:DesignWidth="500"
	mc:Ignorable="d">
	<Window.Resources>
		<cns:RemoveCommandConverter x:Key="RemoveCommandConverter" />
	</Window.Resources>
	<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
		<Grid Name="MainGrid" Grid.IsSharedSizeScope="True">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Grid Name="TopGrid" Grid.Row="0">
				<ListBox
					Padding="0,6,0,6"
					HorizontalContentAlignment="Stretch"
					BorderThickness="0"
					KeyboardNavigation.IsTabStop="False"
					KeyboardNavigation.TabNavigation="Continue"
					LostFocus="TaggedValueListBox_OnLostFocus"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					ScrollViewer.VerticalScrollBarVisibility="Disabled">
					<Grid Margin="0,3,0,3">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" SharedSizeGroup="FirstCol" />
							<ColumnDefinition />
							<ColumnDefinition SharedSizeGroup="ThirdCol" />
						</Grid.ColumnDefinitions>
						<TextBlock
							Grid.Column="0"
							Margin="12,0,6,0"
							Text="{DynamicResource ResourceKey=UMLName}" />
						<TextBox
							Grid.Column="1"
							Margin="0,0,12,0"
							Text="{Binding Path=UMLNameValue, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
					</Grid>
					<Grid Margin="0,3,0,3">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" SharedSizeGroup="FirstCol" />
							<ColumnDefinition />
							<ColumnDefinition SharedSizeGroup="ThirdCol" />
						</Grid.ColumnDefinitions>
						<TextBlock
							Grid.Column="0"
							Margin="12,0,6,0"
							Text="{DynamicResource ResourceKey=URI}" />
						<TextBox
							Grid.Column="1"
							Margin="0,0,12,0"
							Text="{Binding Path=URIValue, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
					</Grid>
					<Grid Margin="0,3,0,3">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" SharedSizeGroup="FirstCol" />
							<ColumnDefinition />
							<ColumnDefinition SharedSizeGroup="ThirdCol" />
						</Grid.ColumnDefinitions>
						<TextBlock
							Grid.Column="0"
							Margin="12,0,6,0"
							Text="{DynamicResource ResourceKey=Alias}" />
						<TextBox
							Grid.Column="1"
							Margin="0,0,12,0"
							Text="{Binding Path=AliasValue, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
					</Grid>
				</ListBox>
			</Grid>
			<Grid Name="LanguageGrid" Grid.Row="1">
				<TabControl Name="LanguageTabControl" BorderThickness="0,1,0,1">
					<TabItem Name="DanishTab">
						<TabItem.Header>
							<TextBlock FontWeight="SemiBold" Text="{DynamicResource ResourceKey=DanishAnnotations}" />
						</TabItem.Header>
						<ItemsControl
							Padding="0,6,0,6"
							HorizontalContentAlignment="Stretch"
							BorderThickness="0"
							ItemsSource="{Binding Path=DanishTaggedValues}"
							KeyboardNavigation.IsTabStop="False"
							KeyboardNavigation.TabNavigation="Continue"
							ScrollViewer.HorizontalScrollBarVisibility="Disabled"
							ScrollViewer.VerticalScrollBarVisibility="Disabled">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<ListBox
										Name="TaggedValueListBox"
										HorizontalContentAlignment="Stretch"
										BorderThickness="0"
										ItemsSource="{Binding}"
										KeyboardNavigation.IsTabStop="False"
										KeyboardNavigation.TabNavigation="Continue"
										LostFocus="TaggedValueListBox_OnLostFocus"
										ScrollViewer.HorizontalScrollBarVisibility="Disabled"
										ScrollViewer.VerticalScrollBarVisibility="Disabled">
										<ListBox.InputBindings>
											<KeyBinding Key="Delete" Command="{Binding Path=DataContext.RemoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
												<KeyBinding.CommandParameter>
													<MultiBinding Converter="{StaticResource RemoveCommandConverter}">
														<MultiBinding.Bindings>
															<Binding Path="ItemsSource" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
															<Binding Path="SelectedIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
															<Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" />
														</MultiBinding.Bindings>
													</MultiBinding>
												</KeyBinding.CommandParameter>
											</KeyBinding>
										</ListBox.InputBindings>
										<ListBox.ItemTemplate>
											<!--  Inner content  -->
											<DataTemplate>
												<Grid
													Name="TaggedValueGrid"
													Margin="0,3,0,3"
													Background="Transparent">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" SharedSizeGroup="FirstCol" />
														<ColumnDefinition />
														<ColumnDefinition Width="Auto" />
													</Grid.ColumnDefinitions>
													<TextBlock
														Name="TaggedValueTextBlock"
														Grid.Column="0"
														Margin="12,0,6,0"
														Text="{Binding Path=Name}"
														Visibility="Hidden" />
													<TextBox
														Name="TaggedValueTextBox"
														Grid.Column="1"
														Margin="0,0,12,0"
														MaxLines="5"
														Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
														TextWrapping="Wrap" />
													<Button
														Name="AddButton"
														Grid.Column="2"
														Width="20px"
														Height="20px"
														Margin="0,0,12,0"
														Command="{Binding Path=DataContext.AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
														CommandParameter="{Binding Path=ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
														Content="+"
														Visibility="Hidden" />
												</Grid>
												<DataTemplate.Triggers>
													<!--  Trigger if previous element is null (i.e. current element is first)  -->
													<DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
														<DataTrigger.Setters>
															<Setter TargetName="AddButton" Property="Visibility" Value="Visible" />
															<Setter TargetName="TaggedValueTextBlock" Property="Visibility" Value="Visible" />
														</DataTrigger.Setters>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.ManyMultiplicity}" Value="False">
														<DataTrigger.Setters>
															<Setter TargetName="AddButton" Property="Visibility" Value="Hidden" />
														</DataTrigger.Setters>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.HasMemoField}" Value="True">
														<DataTrigger.Setters>
															<Setter TargetName="TaggedValueTextBox" Property="AcceptsReturn" Value="True" />
														</DataTrigger.Setters>
													</DataTrigger>
												</DataTemplate.Triggers>
											</DataTemplate>
											<!--  Inner content end  -->
										</ListBox.ItemTemplate>
									</ListBox>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</TabItem>
					<TabItem Name="EnglishTab">
						<TabItem.Header>
							<TextBlock FontWeight="SemiBold" Text="{DynamicResource ResourceKey=EnglishAnnotations}" />
						</TabItem.Header>
						<ItemsControl
							Padding="0,6,0,6"
							HorizontalContentAlignment="Stretch"
							ItemsSource="{Binding Path=EnglishTaggedValues}"
							KeyboardNavigation.IsTabStop="False"
							KeyboardNavigation.TabNavigation="Continue"
							ScrollViewer.HorizontalScrollBarVisibility="Disabled"
							ScrollViewer.VerticalScrollBarVisibility="Disabled">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<ListBox
										HorizontalContentAlignment="Stretch"
										BorderThickness="0"
										ItemsSource="{Binding}"
										KeyboardNavigation.IsTabStop="False"
										KeyboardNavigation.TabNavigation="Continue"
										LostFocus="TaggedValueListBox_OnLostFocus"
										ScrollViewer.HorizontalScrollBarVisibility="Disabled"
										ScrollViewer.VerticalScrollBarVisibility="Disabled">
										<ListBox.InputBindings>
											<KeyBinding Key="Delete" Command="{Binding Path=DataContext.RemoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
												<KeyBinding.CommandParameter>
													<MultiBinding Converter="{StaticResource RemoveCommandConverter}">
														<MultiBinding.Bindings>
															<Binding Path="ItemsSource" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
															<Binding Path="SelectedIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
															<Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" />
														</MultiBinding.Bindings>
													</MultiBinding>
												</KeyBinding.CommandParameter>
											</KeyBinding>
										</ListBox.InputBindings>
										<ListBox.ItemTemplate>
											<!--  Inner content  -->
											<DataTemplate>
												<Grid Margin="0,3,0,3">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" SharedSizeGroup="FirstCol" />
														<ColumnDefinition />
														<ColumnDefinition Width="Auto" />
													</Grid.ColumnDefinitions>
													<TextBlock
														Name="TaggedValueTextBlock"
														Grid.Column="0"
														Margin="12,0,6,0"
														Text="{Binding Path=Name}"
														Visibility="Hidden" />
													<TextBox
														Name="TaggedValueTextBox"
														Grid.Column="1"
														Margin="0,0,12,0"
														MaxLines="5"
														Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
														TextWrapping="Wrap" />
													<Button
														Name="AddButton"
														Grid.Column="2"
														Width="20px"
														Height="20px"
														Margin="0,0,12,0"
														Command="{Binding Path=DataContext.AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
														CommandParameter="{Binding Path=ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
														Content="+"
														Visibility="Hidden" />
												</Grid>
												<DataTemplate.Triggers>
													<!--  Trigger if previous element is null (i.e. current element is first)  -->
													<DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
														<DataTrigger.Setters>
															<Setter TargetName="AddButton" Property="Visibility" Value="Visible" />
															<Setter TargetName="TaggedValueTextBlock" Property="Visibility" Value="Visible" />
														</DataTrigger.Setters>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.ManyMultiplicity}" Value="False">
														<DataTrigger.Setters>
															<Setter TargetName="AddButton" Property="Visibility" Value="Hidden" />
														</DataTrigger.Setters>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.HasMemoField}" Value="True">
														<DataTrigger.Setters>
															<Setter TargetName="TaggedValueTextBox" Property="AcceptsReturn" Value="True" />
														</DataTrigger.Setters>
													</DataTrigger>
												</DataTemplate.Triggers>
											</DataTemplate>
											<!--  Inner content end  -->
										</ListBox.ItemTemplate>
									</ListBox>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</TabItem>
				</TabControl>
			</Grid>
			<Grid Name="ProvenanceGrid" Grid.Row="2">
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition />
				</Grid.RowDefinitions>
				<TextBlock
					Grid.Row="0"
					Margin="12,6,6,0"
					FontWeight="SemiBold"
					Text="{DynamicResource ResourceKey=Provenance}" />
				<ItemsControl
					Grid.Row="1"
					Padding="0,6,0,6"
					HorizontalContentAlignment="Stretch"
					ItemsSource="{Binding Path=ProvenanceTaggedValues}"
					KeyboardNavigation.IsTabStop="False"
					KeyboardNavigation.TabNavigation="Continue"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					ScrollViewer.VerticalScrollBarVisibility="Disabled">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ListBox
								HorizontalContentAlignment="Stretch"
								BorderThickness="0"
								ItemsSource="{Binding}"
								KeyboardNavigation.IsTabStop="False"
								KeyboardNavigation.TabNavigation="Continue"
								LostFocus="TaggedValueListBox_OnLostFocus"
								ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								ScrollViewer.VerticalScrollBarVisibility="Disabled">
								<ListBox.InputBindings>
									<KeyBinding Key="Delete" Command="{Binding Path=DataContext.RemoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
										<KeyBinding.CommandParameter>
											<MultiBinding Converter="{StaticResource RemoveCommandConverter}">
												<MultiBinding.Bindings>
													<Binding Path="ItemsSource" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
													<Binding Path="SelectedIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
													<Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" />
												</MultiBinding.Bindings>
											</MultiBinding>
										</KeyBinding.CommandParameter>
									</KeyBinding>
								</ListBox.InputBindings>
								<ListBox.ItemTemplate>
									<!--  Inner content  -->
									<DataTemplate>
										<Grid Margin="0,3,0,3">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" SharedSizeGroup="FirstCol" />
												<ColumnDefinition />
												<ColumnDefinition Width="Auto" />
											</Grid.ColumnDefinitions>
											<TextBlock
												Name="TaggedValueTextBlock"
												Grid.Column="0"
												Margin="12,0,6,0"
												Text="{Binding Path=Name}"
												Visibility="Hidden" />
											<TextBox
												Name="TaggedValueTextBox"
												Grid.Column="1"
												Margin="0,0,12,0"
												MaxLines="5"
												Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
												TextWrapping="Wrap" />
											<Button
												Name="AddButton"
												Grid.Column="2"
												Width="20px"
												Height="20px"
												Margin="0,0,12,0"
												Command="{Binding Path=DataContext.AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
												CommandParameter="{Binding Path=ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
												Content="+"
												Visibility="Hidden" />
										</Grid>
										<DataTemplate.Triggers>
											<!--  Trigger if previous element is null (i.e. current element is first)  -->
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
												<DataTrigger.Setters>
													<Setter TargetName="AddButton" Property="Visibility" Value="Visible" />
													<Setter TargetName="TaggedValueTextBlock" Property="Visibility" Value="Visible" />
												</DataTrigger.Setters>
											</DataTrigger>
											<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.ManyMultiplicity}" Value="False">
												<DataTrigger.Setters>
													<Setter TargetName="AddButton" Property="Visibility" Value="Hidden" />
												</DataTrigger.Setters>
											</DataTrigger>
											<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.HasMemoField}" Value="True">
												<DataTrigger.Setters>
													<Setter TargetName="TaggedValueTextBox" Property="AcceptsReturn" Value="True" />
												</DataTrigger.Setters>
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
									<!--  Inner content end  -->
								</ListBox.ItemTemplate>
							</ListBox>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Grid>
			<Grid Name="StereotypeGrid" Grid.Row="3">
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition />
				</Grid.RowDefinitions>
				<!--  TODO: Update Text to reflect correct stereotype  (Individual / OwlClass / RdfsClass)  -->
				<TextBlock
					Name="StereotypeTextBlock"
					Grid.Row="0"
					Margin="12,6,6,0"
					FontWeight="SemiBold"
					Text="{DynamicResource ResourceKey=RdfsClassCharacteristics}" />
				<ItemsControl
					Grid.Row="1"
					Padding="0,6,0,6"
					HorizontalContentAlignment="Stretch"
					ItemsSource="{Binding Path=StereotypeTaggedValues}"
					KeyboardNavigation.IsTabStop="False"
					KeyboardNavigation.TabNavigation="Continue"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					ScrollViewer.VerticalScrollBarVisibility="Disabled">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ListBox
								HorizontalContentAlignment="Stretch"
								BorderThickness="0"
								ItemsSource="{Binding}"
								KeyboardNavigation.IsTabStop="False"
								KeyboardNavigation.TabNavigation="Continue"
								LostFocus="TaggedValueListBox_OnLostFocus"
								ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								ScrollViewer.VerticalScrollBarVisibility="Disabled">
								<ListBox.InputBindings>
									<KeyBinding Key="Delete" Command="{Binding Path=DataContext.RemoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
										<KeyBinding.CommandParameter>
											<MultiBinding Converter="{StaticResource RemoveCommandConverter}">
												<MultiBinding.Bindings>
													<Binding Path="ItemsSource" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
													<Binding Path="SelectedIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
													<Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" />
												</MultiBinding.Bindings>
											</MultiBinding>
										</KeyBinding.CommandParameter>
									</KeyBinding>
								</ListBox.InputBindings>
								<ListBox.ItemTemplate>
									<!--  Inner content  -->
									<DataTemplate>
										<Grid Margin="0,3,0,3" KeyboardNavigation.IsTabStop="False">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" SharedSizeGroup="FirstCol" />
												<ColumnDefinition />
												<ColumnDefinition Width="Auto" SharedSizeGroup="ThirdCol" />
											</Grid.ColumnDefinitions>
											<TextBlock
												Name="TaggedValueTextBlock"
												Grid.Column="0"
												Margin="12,0,6,0"
												Text="{Binding Path=Name}"
												Visibility="Hidden" />
											<TextBox
												Name="TaggedValueTextBox"
												Grid.Column="1"
												Margin="0,0,12,0"
												MaxLines="5"
												Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
												TextWrapping="Wrap" />
											<Button
												Name="AddButton"
												Grid.Column="2"
												Width="20px"
												Height="20px"
												Margin="0,0,12,0"
												Command="{Binding Path=DataContext.AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
												CommandParameter="{Binding Path=ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
												Content="+"
												Visibility="Hidden" />
										</Grid>
										<DataTemplate.Triggers>
											<!--  Trigger if previous element is null (i.e. current element is first)  -->
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
												<DataTrigger.Setters>
													<Setter TargetName="AddButton" Property="Visibility" Value="Visible" />
													<Setter TargetName="TaggedValueTextBlock" Property="Visibility" Value="Visible" />
												</DataTrigger.Setters>
											</DataTrigger>
											<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.ManyMultiplicity}" Value="False">
												<DataTrigger.Setters>
													<Setter TargetName="AddButton" Property="Visibility" Value="Hidden" />
												</DataTrigger.Setters>
											</DataTrigger>
											<DataTrigger Binding="{Binding Path=PlusprofilTaggedValue.HasMemoField}" Value="True">
												<DataTrigger.Setters>
													<Setter TargetName="TaggedValueTextBox" Property="AcceptsReturn" Value="True" />
												</DataTrigger.Setters>
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
									<!--  Inner content end  -->
								</ListBox.ItemTemplate>
							</ListBox>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Grid>
			<WrapPanel
				Name="SavePanel"
				Grid.Row="4"
				HorizontalAlignment="Right">
				<Button
					Margin="12,6,3,6"
					Command="{Binding Path=CancelCommand}"
					CommandParameter="{Binding ElementName=MainWindow}">
					<TextBlock Margin="6,2,6,2" Text="{DynamicResource ResourceKey=Cancel}" />
				</Button>
				<Button
					Margin="3,6,12,6"
					Command="{Binding Path=SaveCommand}"
					CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
					<TextBlock Margin="6,2,6,2" Text="{DynamicResource ResourceKey=SaveChanges}" />
				</Button>
			</WrapPanel>
		</Grid>
	</ScrollViewer>
</Window>